doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title Dynamic Scrolling Window
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css')
  style.
    /* Style for the black window */
    .window {
      height: 100%; 
      width: 100%; 
      background-color: black;
      overflow: hidden; 
      padding: 20px; 
      box-sizing: border-box; 
      position: relative; 
      color: white;
    }
    .inner-container {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }
    .card {
      margin: 10px 0;
      padding: 10px;
      background-color: #212529; /* Dark color for card background */
      border: 1px solid #6c757d; /* Border color */
      border-radius: 5px;
      width: 300px;
    }
    .card .key {
      font-weight: bold;
      color: #ffcc00; /* Yellow */
    }
    .card .value {
      color: #00ccff; /* Blue */
    }

include navBar
.window
  #dynamic-content.inner-container

script.
  // Function to update data
  function updateData() {
    fetch('/serverDynamicData')
      .then(response => response.json())
      .then(data => {
        const innerContainer = document.getElementById('dynamic-content');
        innerContainer.innerHTML = '';

        data.dataToUpdate.forEach((dataObject) => {
          const card = document.createElement('div');
          card.className = 'card';

          for (const [key, value] of Object.entries(dataObject)) {
            const keyValueElement = document.createElement('div');
            keyValueElement.className = 'key-value';

            const keyElement = document.createElement('div');
            keyElement.className = 'key';
            keyElement.textContent = `${key}:`;

            const valueElement = document.createElement('div');
            valueElement.className = 'value';
            valueElement.textContent = value;

            keyValueElement.appendChild(keyElement);
            keyValueElement.appendChild(valueElement);

            card.appendChild(keyValueElement);
          }

          innerContainer.appendChild(card);
        });
      })
      .catch(error => console.error('Error fetching data:', error));
  }

  // Update data initially
  updateData();

  // Update data every 5 seconds (adjust as needed)
  setInterval(updateData, 5000);
script(src='https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js' integrity='sha512-aoTNnqZcT8B4AmeCFmiSnDlc4Nj/KPaZyB5G7JnOnUEkdNpCZs1LCankiYi01sLTyWy+m2P+W4XM+BuQ3Q4/Dg==' crossorigin='anonymous' referrerpolicy='no-referrer')

script(src="/js/serverDynamicData.js") 